{"ast":null,"code":"import { call, put, takeEvery, select } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from '../constants/orderConstants';\n\n// Order API call functions\nfunction* createOrderSaga(action) {\n  try {\n    const {\n      order\n    } = action.payload;\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = yield select(state => state);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = yield call(axios.post, '/api/orders', order, config);\n    yield put({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response;\n    yield put({\n      type: ORDER_CREATE_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message\n    });\n  }\n}\nfunction* getOrderDetailsSaga(action) {\n  try {\n    const {\n      id\n    } = action.payload;\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = yield select(state => state);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = yield call(axios.get, `/api/orders/${id}`, config);\n    yield put({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response2;\n    yield put({\n      type: ORDER_DETAILS_FAIL,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) || error.message\n    });\n  }\n}\nfunction* payOrderSaga(action) {\n  try {\n    const {\n      orderId,\n      paymentResult\n    } = action.payload;\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = yield select(state => state);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = yield call(axios.put, `/api/orders/${orderId}/pay`, paymentResult, config);\n    yield put({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response3;\n    yield put({\n      type: ORDER_PAY_FAIL,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data.message) || error.message\n    });\n  }\n}\nfunction* deliverOrderSaga(action) {\n  try {\n    const {\n      order\n    } = action.payload;\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = yield select(state => state);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = yield call(axios.put, `/api/orders/${order._id}/deliver`, {}, config);\n    yield put({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response4;\n    yield put({\n      type: ORDER_DELIVER_FAIL,\n      payload: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data.message) || error.message\n    });\n  }\n}\nfunction* listMyOrdersSaga() {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = yield select(state => state);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = yield call(axios.get, '/api/orders/myorders', config);\n    yield put({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response5;\n    yield put({\n      type: ORDER_LIST_MY_FAIL,\n      payload: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data.message) || error.message\n    });\n  }\n}\nfunction* listOrdersSaga() {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = yield select(state => state);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = yield call(axios.get, '/api/orders', config);\n    yield put({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response6;\n    yield put({\n      type: ORDER_LIST_FAIL,\n      payload: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data.message) || error.message\n    });\n  }\n}\n\n// Watchers\nexport function* watchOrderActions() {\n  yield takeEvery(ORDER_CREATE_REQUEST, createOrderSaga);\n  yield takeEvery(ORDER_DETAILS_REQUEST, getOrderDetailsSaga);\n  yield takeEvery(ORDER_PAY_REQUEST, payOrderSaga);\n  yield takeEvery(ORDER_DELIVER_REQUEST, deliverOrderSaga);\n  yield takeEvery(ORDER_LIST_MY_REQUEST, listMyOrdersSaga);\n  yield takeEvery(ORDER_LIST_REQUEST, listOrdersSaga);\n}","map":{"version":3,"names":["call","put","takeEvery","select","axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrderSaga","action","order","payload","userLogin","userInfo","state","config","headers","Authorization","token","data","post","type","error","_error$response","response","message","getOrderDetailsSaga","id","get","_error$response2","payOrderSaga","orderId","paymentResult","_error$response3","deliverOrderSaga","_id","_error$response4","listMyOrdersSaga","_error$response5","listOrdersSaga","_error$response6","watchOrderActions"],"sources":["F:/React Projects/Totality/front-end/src/sagas/orderSaga.js"],"sourcesContent":["import { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL,\r\n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\r\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL\r\n} from '../constants/orderConstants';\r\n\r\n// Order API call functions\r\nfunction* createOrderSaga(action) {\r\n    try {\r\n        const { order } = action.payload;\r\n        const { userLogin: { userInfo } } = yield select(state => state);\r\n        const config = { headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = yield call(axios.post, '/api/orders', order, config);\r\n        yield put({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: ORDER_CREATE_FAIL, payload: error.response?.data.message || error.message });\r\n    }\r\n}\r\n\r\nfunction* getOrderDetailsSaga(action) {\r\n    try {\r\n        const { id } = action.payload;\r\n        const { userLogin: { userInfo } } = yield select(state => state);\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = yield call(axios.get, `/api/orders/${id}`, config);\r\n        yield put({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: ORDER_DETAILS_FAIL, payload: error.response?.data.message || error.message });\r\n    }\r\n}\r\n\r\nfunction* payOrderSaga(action) {\r\n    try {\r\n        const { orderId, paymentResult } = action.payload;\r\n        const { userLogin: { userInfo } } = yield select(state => state);\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = yield call(axios.put, `/api/orders/${orderId}/pay`, paymentResult, config);\r\n        yield put({ type: ORDER_PAY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: ORDER_PAY_FAIL, payload: error.response?.data.message || error.message });\r\n    }\r\n}\r\n\r\nfunction* deliverOrderSaga(action) {\r\n    try {\r\n        const { order } = action.payload;\r\n        const { userLogin: { userInfo } } = yield select(state => state);\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = yield call(axios.put, `/api/orders/${order._id}/deliver`, {}, config);\r\n        yield put({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: ORDER_DELIVER_FAIL, payload: error.response?.data.message || error.message });\r\n    }\r\n}\r\n\r\nfunction* listMyOrdersSaga() {\r\n    try {\r\n        const { userLogin: { userInfo } } = yield select(state => state);\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = yield call(axios.get, '/api/orders/myorders', config);\r\n        yield put({ type: ORDER_LIST_MY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: ORDER_LIST_MY_FAIL, payload: error.response?.data.message || error.message });\r\n    }\r\n}\r\n\r\nfunction* listOrdersSaga() {\r\n    try {\r\n        const { userLogin: { userInfo } } = yield select(state => state);\r\n        const config = { headers: { Authorization: `Bearer ${userInfo.token}` } };\r\n        const { data } = yield call(axios.get, '/api/orders', config);\r\n        yield put({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        yield put({ type: ORDER_LIST_FAIL, payload: error.response?.data.message || error.message });\r\n    }\r\n}\r\n\r\n// Watchers\r\nexport function* watchOrderActions() {\r\n    yield takeEvery(ORDER_CREATE_REQUEST, createOrderSaga);\r\n    yield takeEvery(ORDER_DETAILS_REQUEST, getOrderDetailsSaga);\r\n    yield takeEvery(ORDER_PAY_REQUEST, payOrderSaga);\r\n    yield takeEvery(ORDER_DELIVER_REQUEST, deliverOrderSaga);\r\n    yield takeEvery(ORDER_LIST_MY_REQUEST, listMyOrdersSaga);\r\n    yield takeEvery(ORDER_LIST_REQUEST, listOrdersSaga);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}