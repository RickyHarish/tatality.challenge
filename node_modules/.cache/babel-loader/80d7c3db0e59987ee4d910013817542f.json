{"ast":null,"code":"import{ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_FAIL,ORDER_PAY_REQUEST,ORDER_PAY_SUCCESS,ORDER_PAY_FAIL,ORDER_LIST_MY_REQUEST,ORDER_LIST_MY_SUCCESS,ORDER_LIST_MY_FAIL,ORDER_LIST_FAIL,ORDER_LIST_SUCCESS,ORDER_LIST_REQUEST,ORDER_DELIVER_REQUEST,ORDER_DELIVER_SUCCESS,ORDER_DELIVER_FAIL}from'../constants/orderConstants';import axios from'axios';export const createOrder=order=>async(dispatch,getState)=>{try{dispatch({type:ORDER_CREATE_REQUEST});const{userLogin:{userInfo}}=getState();console.log(userInfo);const config={headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.post(\"/api/orders\",order,config);console.log(data);dispatch({type:ORDER_CREATE_SUCCESS,payload:data});console.log(\"Action Triggered\");}catch(error){dispatch({type:ORDER_CREATE_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getOrderDetails=id=>async(dispatch,getState)=>{try{dispatch({type:ORDER_DETAILS_REQUEST});const{userLogin:{userInfo}}=getState();console.log(userInfo);const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/\".concat(id),config);console.log(data);dispatch({type:ORDER_DETAILS_SUCCESS,payload:data});console.log(\"Action Triggered\");}catch(error){dispatch({type:ORDER_DETAILS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const payOrder=(orderId,paymentResult)=>async(dispatch,getState)=>{try{dispatch({type:ORDER_PAY_REQUEST});const{userLogin:{userInfo}}=getState();console.log(userInfo);const config={headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(orderId,\"/pay\"),paymentResult,config);console.log(data);dispatch({type:ORDER_PAY_SUCCESS,payload:data});console.log(\"Action Triggered\");}catch(error){dispatch({type:ORDER_PAY_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const deliverOrder=order=>async(dispatch,getState)=>{try{dispatch({type:ORDER_DELIVER_REQUEST});const{userLogin:{userInfo}}=getState();console.log(userInfo);const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(order._id,\"/deliver\"),{},config);console.log(data);dispatch({type:ORDER_DELIVER_SUCCESS,payload:data});console.log(\"Action Triggered\");}catch(error){dispatch({type:ORDER_DELIVER_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const listMyOrders=()=>async(dispatch,getState)=>{try{dispatch({type:ORDER_LIST_MY_REQUEST});const{userLogin:{userInfo}}=getState();console.log(userInfo);const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/myorders\",config);console.log(data);dispatch({type:ORDER_LIST_MY_SUCCESS,payload:data});console.log(\"Action Triggered\");}catch(error){dispatch({type:ORDER_LIST_MY_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const listOrders=()=>async(dispatch,getState)=>{try{dispatch({type:ORDER_LIST_REQUEST});const{userLogin:{userInfo}}=getState();console.log(userInfo);const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders\",config);console.log(data);dispatch({type:ORDER_LIST_SUCCESS,payload:data});console.log(\"Action Triggered\");}catch(error){dispatch({type:ORDER_LIST_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};","map":{"version":3,"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","console","log","config","headers","Authorization","concat","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"sources":["F:/React Projects/Totality/front-end/src/actions/orderActions.js"],"sourcesContent":["import {ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS,\r\n     ORDER_CREATE_FAIL, \r\n     ORDER_DETAILS_REQUEST,\r\n      ORDER_DETAILS_SUCCESS, \r\n      ORDER_DETAILS_FAIL,\r\n      ORDER_PAY_REQUEST,\r\n      ORDER_PAY_SUCCESS,\r\n      ORDER_PAY_FAIL,\r\n      ORDER_LIST_MY_REQUEST,\r\n      ORDER_LIST_MY_SUCCESS,\r\n      ORDER_LIST_MY_FAIL,\r\n      ORDER_LIST_FAIL,\r\n      ORDER_LIST_SUCCESS,\r\n      ORDER_LIST_REQUEST,\r\n      ORDER_DELIVER_REQUEST,\r\n      ORDER_DELIVER_SUCCESS,\r\n      ORDER_DELIVER_FAIL} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order)=>async(dispatch, getState)=>{\r\n    \r\n    try {\r\n        dispatch({\r\n            type:ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {userLogin:{userInfo}} = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n        console.log(\"Action Triggered\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id)=>async(dispatch, getState)=>{\r\n    \r\n    try {\r\n        dispatch({\r\n            type:ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {userLogin:{userInfo}} = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}`, config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n        console.log(\"Action Triggered\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult)=>async(dispatch, getState)=>{\r\n    \r\n    try {\r\n        dispatch({\r\n            type:ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {userLogin:{userInfo}} = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n        console.log(\"Action Triggered\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order)=>async(dispatch, getState)=>{\r\n    \r\n    try {\r\n        dispatch({\r\n            type:ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {userLogin:{userInfo}} = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:ORDER_DELIVER_SUCCESS,\r\n            payload:data\r\n        })\r\n        console.log(\"Action Triggered\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DELIVER_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = ()=>async(dispatch, getState)=>{\r\n    \r\n    try {\r\n        dispatch({\r\n            type:ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {userLogin:{userInfo}} = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders`, config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n        console.log(\"Action Triggered\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = ()=>async(dispatch, getState)=>{\r\n    \r\n    try {\r\n        dispatch({\r\n            type:ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {userLogin:{userInfo}} = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.get(`/api/orders`, config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:ORDER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n        console.log(\"Action Triggered\")\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}