{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';// import {thunk} from 'redux-thunk'\nimport createSagaMiddleware from'redux-saga';import{composeWithDevTools}from'redux-devtools-extension';import rootSaga from'./sagas/sagasFile';import{productListReducer,productDetailsReducer,productDeleteReducer,productCreateReducer,productUpdateReducer,productReviewCreateReducer,productTopRatedReducer}from'./reducers/productRedcers';import{userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer}from'./reducers/userReducers';import{cartReducer}from'./reducers/cartReducers';import{orderCreateReducer,orderDetailsReducer,orderListMyReducer,orderPayReducer,orderListReducer,orderDeliverReducer}from'./reducers/orderReducers';const reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,productDelete:productDeleteReducer,productCreate:productCreateReducer,productUpdate:productUpdateReducer,productReviewCreate:productReviewCreateReducer,productTopRated:productTopRatedReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer,userDetails:userDetailsReducer,userUpdateProfile:userUpdateProfileReducer,userList:userListReducer,userDelete:userDeleteReducer,userUpdate:userUpdateReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderDeliver:orderDeliverReducer,orderListMy:orderListMyReducer,orderList:orderListReducer});const userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):[];const cartItemsFromStorage=localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):null;const shippingAddressFromStorage=localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\")):{};const initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};// const middleware = [thunk]\nconst sagMiddleware=createSagaMiddleware();const store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(sagMiddleware)));sagMiddleware.run(rootSaga);export default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","createSagaMiddleware","composeWithDevTools","rootSaga","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","sagMiddleware","store","run"],"sources":["F:/React Projects/Totality/front-end/src/store.js"],"sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\n// import {thunk} from 'redux-thunk'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport rootSaga from './sagas/sagasFile'\r\n\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productRedcers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer,\r\n     orderListMyReducer, \r\n     orderPayReducer, \r\n     orderListReducer,\r\n     orderDeliverReducer,\r\n    } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):[]\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\")):{}\r\n\r\nconst initialState = {\r\n    cart:{cartItems:cartItemsFromStorage, \r\n    shippingAddress:shippingAddressFromStorage\r\n    },\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n\r\n}\r\n\r\n// const middleware = [thunk]\r\nconst sagMiddleware = createSagaMiddleware()\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(sagMiddleware)))\r\nsagMiddleware.run(rootSaga)\r\nexport default store\r\n\r\n"],"mappings":"AAAA,OAAQA,WAAW,CAAEC,eAAe,CAAEC,eAAe,KAAO,OAAO,CACnE;AACA,MAAO,CAAAC,oBAAoB,KAAM,YAAY,CAC7C,OAAQC,mBAAmB,KAAO,0BAA0B,CAC5D,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CAExC,OAASC,kBAAkB,CAAEC,qBAAqB,CAAEC,oBAAoB,CAAEC,oBAAoB,CAAEC,oBAAoB,CAAEC,0BAA0B,CAAEC,sBAAsB,KAAQ,2BAA2B,CAC3M,OAASC,gBAAgB,CAAEC,mBAAmB,CAAEC,kBAAkB,CAAEC,wBAAwB,CAAEC,eAAe,CAAEC,iBAAiB,CAAEC,iBAAiB,KAAQ,yBAAyB,CACpL,OAASC,WAAW,KAAQ,yBAAyB,CACrD,OACIC,kBAAkB,CAClBC,mBAAmB,CAClBC,kBAAkB,CAClBC,eAAe,CACfC,gBAAgB,CAChBC,mBAAmB,KACb,0BAA0B,CAErC,KAAM,CAAAC,OAAO,CAAG1B,eAAe,CAAC,CAC5B2B,WAAW,CAACtB,kBAAkB,CAC9BuB,cAAc,CAACtB,qBAAqB,CACpCuB,aAAa,CAACtB,oBAAoB,CAClCuB,aAAa,CAACtB,oBAAoB,CAClCuB,aAAa,CAACtB,oBAAoB,CAClCuB,mBAAmB,CAACtB,0BAA0B,CAC9CuB,eAAe,CAACtB,sBAAsB,CACtCuB,IAAI,CAACf,WAAW,CAChBgB,SAAS,CAACvB,gBAAgB,CAC1BwB,YAAY,CAACvB,mBAAmB,CAChCwB,WAAW,CAACvB,kBAAkB,CAC9BwB,iBAAiB,CAACvB,wBAAwB,CAC1CwB,QAAQ,CAACvB,eAAe,CACxBwB,UAAU,CAACvB,iBAAiB,CAC5BwB,UAAU,CAACvB,iBAAiB,CAC5BwB,WAAW,CAACtB,kBAAkB,CAC9BuB,YAAY,CAACtB,mBAAmB,CAChCuB,QAAQ,CAACrB,eAAe,CACxBsB,YAAY,CAACpB,mBAAmB,CAChCqB,WAAW,CAACxB,kBAAkB,CAC9ByB,SAAS,CAACvB,gBACd,CAAC,CAAC,CAEF,KAAM,CAAAwB,mBAAmB,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAE5G,KAAM,CAAAG,oBAAoB,CAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAEjH,KAAM,CAAAI,0BAA0B,CAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAEjI,KAAM,CAAAK,YAAY,CAAG,CACjBrB,IAAI,CAAC,CAACsB,SAAS,CAACH,oBAAoB,CACpCI,eAAe,CAACH,0BAChB,CAAC,CACDnB,SAAS,CAAC,CAACuB,QAAQ,CAACV,mBAAmB,CAE3C,CAAC,CAED;AACA,KAAM,CAAAW,aAAa,CAAGzD,oBAAoB,CAAC,CAAC,CAC5C,KAAM,CAAA0D,KAAK,CAAG7D,WAAW,CAAC2B,OAAO,CAAE6B,YAAY,CAAEpD,mBAAmB,CAACF,eAAe,CAAC0D,aAAa,CAAC,CAAC,CAAC,CACrGA,aAAa,CAACE,GAAG,CAACzD,QAAQ,CAAC,CAC3B,cAAe,CAAAwD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}